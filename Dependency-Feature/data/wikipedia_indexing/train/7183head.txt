
   The Challenge of Deep Models, Inference Structures, and Abstract Tasks
   
   Abstract
   
   The paper discusses methodological achievements which have been
   incorporated into second generation expert systems. The key ideas are
   (1) to incorporate more principled knowledge about the domain into a
   knowledge based system and to reason from these (first) principles,
   (2) to define the conceptual model explicitly, and (3) to do some
   abstraction. Abstraction is done on three levels: the factual
   knowledge level, the level of inference steps, and the task level. The
   challenges of these methods are discussed from the viewpoint of
   medical and technical applications.
   
   ?OEFAI-TR-90-17, appeared in Applied Artificial Intelligence,
   5(1)47-56, 1991
   
   Introduction
   
   The great rumor about expert systems started in the late 1970s. It was
   provoked by systems of great promise for medical diagnostic support
   and for interpretation, diagnosis and configuration in natural
   sciences areas and in technical domains. It resulted in a widespread
   application of expert system technology. The goal was to represent the
   skills of experienced domain experts in a knowledge based system (KBS)
   and make this knowledge available to less experienced users when
   solving daily problems. And the goal is still the same today.
   
   Capturing the experience of experts focussed on his/her ability to
   find a quick solution to the problem. This resulted in building
   systems in a straightforward manner by representing associations
   between symptoms often seen and a diagnosis (e.g. for the diagnostic
   problem). Despite the success in several areas of application, a list
   of problems showed up:
   
    While working well in the central area of expertise, the systems
   reach horrible conclusions on their knowledge boundaries. There is no
   graceful degradation of performance when coming to these boundaries,
   as we would expect from an expert. More seriously, the systems are not
   able to recognize their own boundaries.
   
    Besides simple backward tracing of rule invocations there is no
   chance to provide meaningful and user-tailored explanations. This
   would require to explain the underlying principles how the problem at
   hand is solved.
   
    Knowledge acquisition is the most pressing problem. In what is
   commonly called the Feigenbaum bottleneck: there is one knowledge
   engineer (the bottleneck) who filters all the expert's knowledge. The
